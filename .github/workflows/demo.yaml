name: Build & Deploy Euterpe Demo
on:
    push:
        branches:
            - main
            - staging
            - dev
        paths:
            - "apps/demo/**"
    pull_request:
        branches:
            - main
            - staging
            - dev
        paths:
            - "apps/demo/**"
    workflow_dispatch:
        inputs:
            environment:
                description: "Environment to deploy to"
                required: true
                default: "development"
                type: string
                options:
                    - production
                    - staging
                    - development
jobs:
    build:
        name: Build Vite Project
        runs-on: ubuntu-latest
        env:
            ENVIRONMENT: |-
                ${{ 
                    github.event.inputs.environment ||
                    github.ref_name == 'main' && 'production' || 
                    github.ref_name == 'staging' && 'staging' ||
                    github.ref_name == 'dev' && 'development' ||
                    'invalid'
                }}
        steps:
            - name: Checkout
              uses: actions/checkout@v5

            - name: Install pnpm
              uses: pnpm/action-setup@v4
              with:
                  run_install: false

            - name: Install Node.js
              uses: actions/setup-node@v6
              with:
                  node-version: ${{ vars.NODE_VERSION }}
                  cache: "pnpm"

            - name: Install dependencies
              run: pnpm install

            - name: Cache Node Modules
              id: cache-node-modules
              uses: actions/cache/save@v4
              with:
                  path: "**/node_modules"
                  key: node-modules-cache-${{ runner.os }}-${{ github.sha }}

            - name: Build Vite Project
              run: pnpm build --filter=@vesta-cx/euterpe-demo -- --mode ${{ env.ENVIRONMENT }}

            - name: Cache Build Output
              id: cache-build-output
              uses: actions/cache/save@v4
              with:
                  path: "apps/demo/dist"
                  # from git branch and commit hash
                  key: build-cache-${{ runner.os }}-${{ github.sha }}

    deploy:
        name: Deploy to Cloudflare Workers
        runs-on: ubuntu-latest
        needs: build
        timeout-minutes: 60
        environment:
            name: "Cloudflare Workers CI/CD"
        env:
            ENVIRONMENT: |-
                ${{ 
                    github.event.inputs.environment ||
                    github.ref_name == 'main' && 'production' || 
                    github.ref_name == 'staging' && 'staging' ||
                    github.ref_name == 'dev' && 'development' ||
                    'invalid'
                }}
        steps:
            - name: Checkout
              uses: actions/checkout@v5

            - name: Install pnpm
              uses: pnpm/action-setup@v4
              with:
                  run_install: false

            - name: Install Node.js
              uses: actions/setup-node@v6
              with:
                  node-version: ${{ vars.NODE_VERSION }}
                  cache: "pnpm"

            - name: Cache Node Modules
              id: cache-node-modules
              uses: actions/cache/restore@v4
              with:
                  path: "**/node_modules"
                  key: node-modules-cache-${{ runner.os }}-${{ github.sha }}

            - name: Restore Build Cache
              id: cache-build-output
              uses: actions/cache/restore@v4
              with:
                  fail-on-cache-miss: true
                  path: "apps/demo/dist"
                  # from git branch and commit hash
                  key: build-cache-${{ runner.os }}-${{ github.sha }}

            - name: Deploy Worker
              id: wrangler
              uses: cloudflare/wrangler-action@v3
              with:
                  apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
                  accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
                  environment: ${{ env.ENVIRONMENT }}
                  workingDirectory: apps/demo
                  packageManager: pnpm

            - name: Log Cloudflare Worker deployment details
              run: "echo 'URL: ${{ steps.wrangler.outputs.deployment-url }}' >> $GITHUB_OUTPUT"
